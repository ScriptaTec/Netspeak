<?php

require_once '../vendor/autoload.php';
use Dotenv\Dotenv;

$dotenv = Dotenv::createImmutable('../');
$dotenv->load();



function processarFraseComGemini($fraseUsuario, $tipoTraducao)
{
    if ($tipoTraducao === "informal"){
        $mensagem = "Como especialista em linguagem e tradu√ß√£o, sua √∫nica tarefa √© converter frases da linguagem informal para a linguagem formal do portugu√™s do Brasil. Voc√™ deve responder apenas com a frase traduzida, sem sauda√ß√µes, coment√°rios ou explica√ß√µes. Sua tradu√ß√£o deve considerar g√≠rias, internet√™s, abrevia√ß√µes, coloquialismos e constru√ß√µes gramaticais simples, transformando-os em uma vers√£o formal e culta da l√≠ngua. Por exemplo, uma frase como E a√≠, tudo bom? A gente foi l√° e fez, deve se tornar Ol√°, tudo bem? N√≥s fomos at√© l√° e fizemos. Lembre-se de responder exclusivamente com a tradu√ß√£o da seguinte frase: $fraseUsuario";
    } else {
        $mensagem = "Beleza. Como um expert em linguagem, sua miss√£o √© traduzir frases do portugu√™s formal e culto para o portugu√™s informal e descolado do Brasil. Sua resposta deve ter emojis, g√≠rias e abrevia√ß√µes. Voc√™ precisa responder s√≥ com a frase traduzida, sem enrola√ß√£o.

Por exemplo, Agrade√ßo imensamente o convite para o evento vira Mano, valeu pelo convite do rol√™! ‚úåÔ∏è. Voc√™ poderia, por gentileza, me ajudar com este problema? vira Me ajuda com esse BO, por favor? üôè. N√≥s realizamos a tarefa com sucesso vira A gente fez o trampo e deu certo! üöÄ. Lembre-se: sua resposta √© a tradu√ß√£o informal, e s√≥ isso! adicione erros gramaticais propositais como: mlk, vc, tbm, hj. Lembre-se de responder exclusivamente com a tradu√ß√£o da seguinte frase: $fraseUsuario";
    }

    $apiKey = $_ENV['CHAVE_API_GEMINI'];

    $data = [
        "contents" => [
            [
                "parts" => [
                    ["text" => $mensagem]
                ]
            ]
        ]
    ];

    $url = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=' . $apiKey;

    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json']);
    curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));

    $response = curl_exec($ch);

    if (curl_errno($ch)) {
        return 'Erro na requisi√ß√£o: ' . curl_error($ch);
    } else {
        $resultado = json_decode($response, true);
        return $resultado['candidates'][0]['content']['parts'][0]['text'] ?? 'Erro ao obter resposta.';
    }
    curl_close($ch);
}
